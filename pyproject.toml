[tool.poetry]
name = "smart_trade_ai"
version = "0.0.0"
description = "SmartTradeAI app"
authors = ["dev <maximy.pro@gmail.com>"]
readme = "README.md"
packages = [{include = "app"}]

[tool.poetry.scripts]
api = "app.main.api:main"
polling = "app.main.polling:main"

[tool.poetry.dependencies]
python = "^3.12"
dependency-injector = "^4.45.0"
aiogram = "^3.17.0"
pydantic = "^2.10.6"
pydantic-settings = "^2.7.1"
openai = "^1.62.0"
sqlalchemy = "^2.0.38"
alembic = "^1.14.1"
asyncpg = "^0.30.0"
greenlet = "^3.1.1"
pybit = "^5.9.0"
redis = "^5.2.1"

[tool.poetry.group.dev.dependencies]
commitizen = "^3.29.1"
pre-commit = "^4.0.1"

[tool.poetry.group.lint.dependencies]
black = "^24.10.0"
flake8 = "^7.1.1"
flake8-bugbear = "^24.8.19"
flake8-comprehensions = "^3.15.0"
flake8-docstrings = "^1.7.0"
flake8-isort = "^6.1.1"
flake8-pytest-style = "^2.0.0"
isort = "^5.13.2"
pep8-naming = "^0.14.1"
mypy = "^1.10.0"

[tool.poetry.group.test.dependencies]
pytest = "^8.3.3"
pytest-asyncio = "^0.24.0"
pytest-cov = "^5.0.0"
pytest-httpx = "^0.32.0"
tox = "^4.23.0"

[tool.poetry.group.coverage.dependencies]
pytest-cov = "^5.0.0"

[tool.isort]
profile = "black"
known_third_party = []
known_first_party = ["api"]
skip = [".gitignore", ".dockerignore"]
extend_skip = [".md", ".json", ".rst"]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.0"
tag_format = "v$version"
version_files = [
    "pyproject.toml:version",
]
major_version_zero = true
annotated_tag = true

[tool.semantic_release]
build_command = "poetry build"
commit_message = "chore(release): {version}\n\nAutomatically generated by python-semantic-release"
major_on_zero = true
version_toml = [
    "pyproject.toml:tool.poetry.version",
    "pyproject.toml:tool.commitizen.version",
]
version_variables = [
    ".helm/Chart.yaml:appVersion",
    ".helm/values.yaml:imageTag",
]

[tool.semantic_release.branches.master]
match = "master"
prerelease = false

[tool.semantic_release.remote]
type = "gitlab"
token = { env = "GL_TOKEN" }

[tool.pytest.ini_options]
addopts = "--asyncio-mode=strict"
filterwarnings = [
    "ignore:::pkg_resources",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"


# BLACK
[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | venv
  | _build
  | buck-out
  | build
  | dist
  | __pycache__
  | \.venv
  | alembic
)/
'''


# MYPY
[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
exclude = [
  "^alembic/.*$"
]
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true


# ...
